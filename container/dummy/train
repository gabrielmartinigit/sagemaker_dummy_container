#!/usr/bin/env python

import io
import logging
import os
import sys
import traceback
import time
from datetime import datetime
from s3_logs.put_content_to_s3 import put_content_to_s3
from s3_logs.string_io_logger import get_string_io_logger

# Cria um objeto string i/o como string buffer
log_stringio_obj = io.StringIO()
log_handler = logging.StreamHandler(log_stringio_obj)
logger = get_string_io_logger(log_stringio_obj, logger_name="my_s3_logger")

# Paths utilizados pelo SageMaker
prefix = "/opt/ml/"
input_path = prefix + "input/data"
output_path = os.path.join(prefix, "output")
model_path = os.path.join(prefix, "model")
param_path = os.path.join(prefix, "input/config/hyperparameters.json")

# Os dados são copiados para seu respectivo canal
channel_name = "training"
training_path = os.path.join(input_path, channel_name)

# Executa o treinamento
def train():
    try:
        logger.info("training test info message")
        logger.warning("training test warning message")
        logger.error("training test error message")
        with open(os.path.join(model_path, "dummy.pkl"), "w") as out:
            out.write("model dummy teste AWS 123")
    except Exception as e:
        # Escreve um arquivo de erro que irá retornar como failureReason na API DescribeTrainingJob.
        trc = traceback.format_exc()
        with open(os.path.join(output_path, "failure"), "w") as s:
            s.write("Exception during training: " + str(e) + "\n" + trc)
        logger.error("Exception during training: " + str(e) + "\n" + trc)
        # Termina o treinamento com falha
        sys.exit(255)


if __name__ == "__main__":
    train()

    # Persiste os logs no s3
    timestamp = datetime.fromtimestamp(time.time()).strftime("%Y%m%d%H%M%S")
    s3_log_path = "s3://BUCKET/python_s3_loggger_demo/{0}/".format(timestamp)

    s3_store_response = put_content_to_s3(
        s3_path=s3_log_path + "logs.txt",
        content=log_stringio_obj.getvalue(),
    )
    assert s3_store_response[
        "success"
    ], "Error Putting logs to S3:\n{0}".format(s3_store_response["data"])

    # Termina o treinamento com sucesso
    sys.exit(0)
